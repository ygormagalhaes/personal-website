(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("PrismicRichtext", [], factory);
	else if(typeof exports === 'object')
		exports["PrismicRichtext"] = factory();
	else
		root["PrismicRichtext"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
var uuid_1 = __webpack_require__(4);
var elements_1 = __webpack_require__(1);
var PRIORITIES = (_a = {},
    _a[elements_1.ElementKind[elements_1.ElementKind.heading1]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.heading2]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.heading4]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.heading4]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.heading5]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.heading6]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.paragraph]] = 3,
    _a[elements_1.ElementKind[elements_1.ElementKind.preformatted]] = 5,
    _a[elements_1.ElementKind[elements_1.ElementKind.strong]] = 6,
    _a[elements_1.ElementKind[elements_1.ElementKind.em]] = 6,
    _a[elements_1.ElementKind[elements_1.ElementKind["list-item"]]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind["o-list-item"]]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind["group-list-item"]]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind["group-o-list-item"]]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind.image]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind.embed]] = 1,
    _a[elements_1.ElementKind[elements_1.ElementKind.hyperlink]] = 3,
    _a[elements_1.ElementKind[elements_1.ElementKind.label]] = 4,
    _a[elements_1.ElementKind[elements_1.ElementKind.span]] = 7,
    _a);
var Tree = /** @class */ (function () {
    function Tree(root) {
        this.root = root;
    }
    Tree.create = function (nodes) {
        return new Tree({ key: uuid_1["default"](), children: nodes });
    };
    Tree.fromRichText = function (richText) {
        var leaves = richText.reduce(function (acc, block) {
            if (elements_1.Element.containsText(block)) {
                var customItems = customText(block.text, block.spans);
                var sortedCustomItems = customItems.sort(function (a, b) {
                    return a.start - b.start;
                });
                var blockStart = 0;
                var blockEnd = block.text.length;
                var tail = acc.length > 0 ? acc[acc.length - 1] : null;
                if (elements_1.Element.isListItem(block) && elements_1.Element.isList(tail)) {
                    var safeTail = tail;
                    var listItemLeaf = new Leaf(blockStart, blockEnd, block.type, block, sortedCustomItems, subText(block.text, blockStart, blockEnd));
                    var children = safeTail.children.concat([listItemLeaf]);
                    var listLeaf = safeTail.copy({ children: children });
                    return acc.slice(0, acc.length - 1).concat([listLeaf]);
                }
                else if (elements_1.Element.isOrderedListItem(block) && elements_1.Element.isOrderedList(tail)) {
                    var safeTail = tail;
                    var oListItemLeaf = new Leaf(blockStart, blockEnd, block.type, block, sortedCustomItems, subText(block.text, blockStart, blockEnd));
                    var children = safeTail.children.concat([oListItemLeaf]);
                    var oListLeaf = safeTail.copy({ children: children });
                    return acc.slice(0, acc.length - 1).concat([oListLeaf]);
                }
                else if (elements_1.Element.isListItem(block)) {
                    var listItemLeaf = new Leaf(blockStart, blockEnd, block.type, block, sortedCustomItems, subText(block.text, blockStart, blockEnd));
                    var listLeaf = new Leaf(blockStart, blockEnd, elements_1.ElementKindAsObj.list, { type: elements_1.ElementKindAsObj.list }, [listItemLeaf]);
                    return acc.concat([listLeaf]);
                }
                else if (elements_1.Element.isOrderedListItem(block)) {
                    var oListItemLeaf = new Leaf(blockStart, blockEnd, block.type, block, sortedCustomItems, subText(block.text, blockStart, blockEnd));
                    var oListLeaf = new Leaf(blockStart, blockEnd, elements_1.ElementKindAsObj.oList, { type: elements_1.ElementKindAsObj.oList }, [oListItemLeaf]);
                    return acc.concat([oListLeaf]);
                }
                else {
                    return acc.concat(new Leaf(blockStart, blockEnd, block.type, block, sortedCustomItems, subText(block.text, blockStart, blockEnd)));
                }
                //specific for image and embed fragment without any text
            }
            else {
                return acc.concat(new Leaf(0, 0, block.type, block, []));
            }
        }, []);
        return Tree.create(leaves);
    };
    return Tree;
}());
exports.Tree = Tree;
var Leaf = /** @class */ (function () {
    function Leaf(start, end, type, raw, children, text) {
        if (children === void 0) { children = []; }
        this.key = uuid_1["default"]();
        this.start = start;
        this.end = end;
        this.type = type;
        this.text = text;
        this.raw = raw;
        this.children = children;
    }
    Leaf.prototype.contains = function (node) {
        return this.start <= node.start && this.end >= node.end;
    };
    Leaf.prototype.isOutside = function (node) {
        return (this.start < node.start && this.end <= node.start) || (this.start >= node.end && this.end > node.end);
    };
    Leaf.prototype.copy = function (params) {
        return new Leaf(params.start || this.start, params.end || this.end, params.type || this.type, params.raw || this.raw, params.children || this.children, params.text || this.text);
    };
    Leaf.prototype.add = function (node) {
        var eligible = this.children.reduce(function (acc, child) {
            return child.contains(node) ? child.add(node) : null;
        }, null);
        return eligible || this.copy({ children: this.children.concat([node]) });
    };
    Leaf.prototype.addChildren = function (nodes) {
        function exec(parent, children, nodes) {
            return nodes.reduce(function (accChildren, node) {
                if (accChildren.length === 0)
                    return accChildren.concat([node]);
                else
                    return accChildren.reduce(function (acc, child) {
                        if (child.contains(node))
                            return acc.concat([child.add(node)]);
                        else if (node.contains(child))
                            return acc.concat([node.add(child)]);
                        else
                            return acc.concat([child, node]);
                    }, []);
            }, children);
        }
        return new Leaf(this.start, this.end, this.type, this.raw, exec(this, this.children, nodes), this.text);
    };
    Leaf.prototype.length = function () {
        return this.start - this.end;
    };
    return Leaf;
}());
exports.Leaf = Leaf;
function subText(text, start, end) {
    if (text === void 0) { text = ''; }
    var length = end - start;
    return text.substr(start, length);
}
function customText(text, spans) {
    if (spans === void 0) { spans = []; }
    var leaves = spans.map(function (span) {
        return new Leaf(span.start, span.end, span.type, span, [], subText(text, span.start, span.end));
    });
    var textLeaf = new Leaf(0, text.length, elements_1.ElementKind[elements_1.ElementKind.span], { type: elements_1.ElementKind[elements_1.ElementKind.span] }, [], text);
    var leavesWithText = [textLeaf].concat(leaves);
    return (function processLeaves(leaves) {
        if (leaves.length === 0)
            return [];
        var _a = sortByPriorities(leaves), head = _a[0], tail = _a.slice(1);
        var _b = splitLeaves(text, head, tail instanceof Array ? tail : [tail]), inLeaves = _b[0], outLeaves = _b[1];
        var inTree = head.addChildren(processLeaves(inLeaves));
        var outTrees = processLeaves(outLeaves);
        return [inTree].concat(outTrees);
    })(leavesWithText);
}
function sortByPriorities(leaves) {
    return leaves.sort(function (a, b) {
        if (b.contains(a)) {
            return !elements_1.Element.isSpan(b) ? 1 : -1;
        }
        else {
            var diffPriorities = PRIORITIES[a.type] - PRIORITIES[b.type];
            if (diffPriorities === 0)
                return a.length() - b.length();
            else
                return diffPriorities;
        }
    });
}
function splitLeaves(text, immutable, leaves) {
    function subNode(toSplit, start, end) {
        var sub = subText(text, start, end);
        return toSplit.copy({ start: start, end: end, text: sub });
    }
    return leaves.reduce(function (_a, toSplit) {
        var inLeaves = _a[0], outLeaves = _a[1];
        var _b = (function () {
            if (immutable.contains(toSplit))
                return [[toSplit], null];
            else if (toSplit.isOutside(immutable))
                return [null, [toSplit]];
            else if (toSplit.contains(immutable)) {
                var inNode = toSplit.copy({ start: immutable.start, end: immutable.end, text: immutable.text });
                var outLeft = immutable.start > toSplit.start ? subNode(toSplit, toSplit.start, immutable.start) : null;
                var outRight = immutable.end < toSplit.end ? subNode(toSplit, immutable.end, toSplit.end) : null;
                var outNodes_1 = [outLeft, outRight].filter(function (n) { return n !== null; });
                return [[inNode], outNodes_1];
                //left part is inside
            }
            else if (immutable.start <= toSplit.start && immutable.end < toSplit.end) {
                var inNode = subNode(toSplit, toSplit.start, immutable.end);
                var outNode = subNode(toSplit, immutable.end, toSplit.end);
                return [[inNode], [outNode]];
                //right part inside
            }
            else if (immutable.start > toSplit.start && immutable.end >= toSplit.end) {
                var inNode = subNode(toSplit, immutable.start, toSplit.end);
                var outNode = subNode(toSplit, toSplit.start, immutable.start);
                return [[inNode], [outNode]];
            }
            else {
                return [[], []];
            }
        })(), inNodes = _b[0], outNodes = _b[1];
        return [inLeaves.concat(inNodes ? inNodes : []), outLeaves.concat(outNodes ? outNodes : [])];
    }, [[], []]);
}
var _a;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
var prismic_helpers_1 = __webpack_require__(5);
var ElementKind;
(function (ElementKind) {
    ElementKind[ElementKind["heading1"] = 0] = "heading1";
    ElementKind[ElementKind["heading2"] = 1] = "heading2";
    ElementKind[ElementKind["heading3"] = 2] = "heading3";
    ElementKind[ElementKind["heading4"] = 3] = "heading4";
    ElementKind[ElementKind["heading5"] = 4] = "heading5";
    ElementKind[ElementKind["heading6"] = 5] = "heading6";
    ElementKind[ElementKind["paragraph"] = 6] = "paragraph";
    ElementKind[ElementKind["preformatted"] = 7] = "preformatted";
    ElementKind[ElementKind["strong"] = 8] = "strong";
    ElementKind[ElementKind["em"] = 9] = "em";
    ElementKind[ElementKind["list-item"] = 10] = "list-item";
    ElementKind[ElementKind["o-list-item"] = 11] = "o-list-item";
    ElementKind[ElementKind["group-list-item"] = 12] = "group-list-item";
    ElementKind[ElementKind["group-o-list-item"] = 13] = "group-o-list-item";
    ElementKind[ElementKind["image"] = 14] = "image";
    ElementKind[ElementKind["embed"] = 15] = "embed";
    ElementKind[ElementKind["hyperlink"] = 16] = "hyperlink";
    ElementKind[ElementKind["label"] = 17] = "label";
    ElementKind[ElementKind["span"] = 18] = "span";
})(ElementKind = exports.ElementKind || (exports.ElementKind = {}));
;
exports.ElementKindAsObj = {
    heading1: "heading1",
    heading2: "heading2",
    heading3: "heading3",
    heading4: "heading4",
    heading5: "heading5",
    heading6: "heading6",
    paragraph: "paragraph",
    preformatted: "preformatted",
    strong: "strong",
    em: "em",
    listItem: "list-item",
    oListItem: "o-list-item",
    list: "group-list-item",
    oList: "group-o-list-item",
    image: "image",
    embed: "embed",
    hyperlink: "hyperlink",
    label: "label",
    span: "span"
};
var Heading = /** @class */ (function () {
    function Heading(value, level, content) {
        this.value = value;
        this.level = level;
        this.content = content;
        switch (level) {
            case 1:
                this.kind = ElementKind.heading1;
                break;
            case 2:
                this.kind = ElementKind.heading2;
                break;
            case 3:
                this.kind = ElementKind.heading3;
                break;
            case 4:
                this.kind = ElementKind.heading4;
                break;
            case 5:
                this.kind = ElementKind.heading5;
                break;
            case 6:
                this.kind = ElementKind.heading6;
                break;
            default: throw Error("Invalid heading level " + level);
        }
        ;
    }
    return Heading;
}());
exports.Heading = Heading;
var ListItem = /** @class */ (function () {
    function ListItem(value, organized, content) {
        this.value = value;
        this.organized = organized;
        this.content = content;
    }
    return ListItem;
}());
exports.ListItem = ListItem;
var List = /** @class */ (function () {
    function List(value, organized) {
        this.organized = organized;
        this.value = value;
    }
    return List;
}());
exports.List = List;
var Paragraph = /** @class */ (function () {
    function Paragraph(value, content) {
        this.kind = ElementKind.paragraph;
        this.value = value;
        this.content = content;
    }
    return Paragraph;
}());
exports.Paragraph = Paragraph;
var Preformatted = /** @class */ (function () {
    function Preformatted(value, content) {
        this.kind = ElementKind.preformatted;
        this.value = value;
        this.content = content;
    }
    return Preformatted;
}());
exports.Preformatted = Preformatted;
var Strong = /** @class */ (function () {
    function Strong(value, content) {
        this.kind = ElementKind.strong;
        this.value = value;
        this.content = content;
    }
    return Strong;
}());
exports.Strong = Strong;
var Emphasized = /** @class */ (function () {
    function Emphasized(value, content) {
        this.kind = ElementKind.em;
        this.value = value;
        this.content = content;
    }
    return Emphasized;
}());
exports.Emphasized = Emphasized;
var Image = /** @class */ (function () {
    function Image(value, content, linkResolver) {
        this.kind = ElementKind.image;
        this.value = value;
        this.url = this.value.url;
        this.content = content;
        this.linkUrl = value.linkTo ? prismic_helpers_1.Link.url(value.linkTo, linkResolver) : null;
    }
    return Image;
}());
exports.Image = Image;
var Embed = /** @class */ (function () {
    function Embed(value, content) {
        this.kind = ElementKind.embed;
        this.value = value;
        this.content = content;
    }
    return Embed;
}());
exports.Embed = Embed;
var Link = /** @class */ (function () {
    function Link(value, content, linkResolver) {
        this.kind = ElementKind.hyperlink;
        this.value = value;
        this.content = content;
        this.url = prismic_helpers_1.Link.url(value, linkResolver);
    }
    return Link;
}());
exports.Link = Link;
var Label = /** @class */ (function () {
    function Label(value, content) {
        this.kind = ElementKind.label;
        this.value = value;
        this.content = content;
    }
    return Label;
}());
exports.Label = Label;
var Span = /** @class */ (function () {
    function Span(value, content) {
        this.kind = ElementKind.span;
        this.value = value;
        this.content = content;
    }
    return Span;
}());
exports.Span = Span;
exports.Element = {
    containsText: function (element) {
        return !(element.type === 'image' || element.type === 'embed');
    },
    isList: function (elem) {
        return !!elem && exports.ElementKindAsObj.list === elem.type;
    },
    isOrderedList: function (elem) {
        return !!elem && exports.ElementKindAsObj.oList === elem.type;
    },
    isListItem: function (elem) {
        return !!elem && exports.ElementKindAsObj.listItem === elem.type;
    },
    isOrderedListItem: function (elem) {
        return !!elem && exports.ElementKindAsObj.oListItem === elem.type;
    },
    isSpan: function (elem) {
        return !!elem && exports.ElementKindAsObj.span === elem.type;
    },
    apply: function (element, content, linkResolver) {
        switch (element.type) {
            case 'heading1': return new Heading(element, 1, content);
            case 'heading2': return new Heading(element, 2, content);
            case 'heading3': return new Heading(element, 3, content);
            case 'heading4': return new Heading(element, 4, content);
            case 'heading5': return new Heading(element, 5, content);
            case 'heading6': return new Heading(element, 6, content);
            case 'paragraph': return new Paragraph(element, content);
            case 'preformatted': return new Preformatted(element, content);
            case 'strong': return new Strong(element, content);
            case 'em': return new Emphasized(element, content);
            case 'list-item': return new ListItem(element, false, content);
            case 'o-list-item': return new ListItem(element, true, content);
            case 'image': return new Image(element, content, linkResolver);
            case 'embed': return new Embed(element, content);
            case 'hyperlink': return new Link(element, content, linkResolver);
            case 'label': return new Label(element, content);
            case 'span': return new Span(element, content);
            default: throw new Error("Invalid element type " + element.type + " on element : " + JSON.stringify(element));
        }
    }
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(3);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
var generic_1 = __webpack_require__(0);
var serialize_1 = __webpack_require__(6);
var elements_1 = __webpack_require__(1);
module.exports = {
    asText: function (richtext) {
        return richtext.reduce(function (acc, block) {
            return acc + " " + block.text;
        }, '\n');
    },
    asTree: generic_1.Tree.fromRichText,
    serialize: serialize_1["default"],
    Elements: elements_1.ElementKindAsObj
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
function uuid() {
    var d = new Date().getTime();
    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
    return uuid;
}
exports["default"] = uuid;
;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define("PrismicHelpers",[],t):"object"==typeof exports?exports.PrismicHelpers=t():e.PrismicHelpers=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var u=n[r]={i:r,l:!1,exports:{}};return e[r].call(u.exports,u,u.exports,t),u.l=!0,u.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=3)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}var u=n(2),o=r(u),i=n(1),f=r(i);e.exports={Link:o.default,Date:f.default}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(!e)return null;var t=24==e.length?e.substring(0,22)+":"+e.substring(22,24):e;return new Date(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={url:function(e,t){return"Document"===e.link_type?t?t(e,e.isBroken):"":e.url}}},function(e,t,n){e.exports=n(0)}])});

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.__esModule = true;
var generic_1 = __webpack_require__(0);
function fromRichText(richText, serialize, htmlSerializer) {
    var genericTree = generic_1.Tree.fromRichText(richText);
    var children = genericTree.root.children.map(function (leaf) {
        return serializeNode(leaf, serialize, htmlSerializer);
    });
    return children;
}
function serializeNode(node, serialize, htmlSerializer) {
    function exec(node) {
        var serializedChildren = node.children.reduce(function (acc, node) {
            return acc.concat([exec(node)]);
        }, []);
        return htmlSerializer && htmlSerializer(node.raw, node.text || null, serializedChildren) ||
            serialize(node.type, node.raw, node.text || null, serializedChildren);
    }
    return exec(node);
}
exports["default"] = fromRichText;


/***/ })
/******/ ]);
});